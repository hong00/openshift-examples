apiVersion: v1
kind: BuildConfig
metadata:
  name: apps-pipeline
  labels:
    app: jenkins-pipeline-example
    name: apps-pipeline
    template: application-template-sample-pipeline

spec:
  runPolicy: Serial
  strategy:
    type: JenkinsPipeline
    jenkinsPipelineStrategy:
      jenkinsfile: |-
 
      environment {
        APPS-NAME='apps'
        DEV-PRJ-NAME='app-dev'
        DEV-POD-COUNT='2'
        QA-PRJ-NAME='app-qa'
        QA-POD-COUNT='3'
      }  

        node('') {
          stage 'buildInDevelopment'
            openshiftBuild(namespace: ${DEV-PRJ-NAME} , buildConfig: ${APPS-NAME} , showBuildLogs: 'true')
          stage 'deployInDevelopment'
            openshiftDeploy(namespace: ${DEV-PRJ-NAME} , deploymentConfig: ${APPS-NAME})
            openshiftScale(namespace: ${DEV-PRJ-NAME} , deploymentConfig: ${APPS-NAME} , replicaCount: ${DEV-POD-COUNT})
          stage 'deployInQA'
            slackSend (color: '#FFFF00', message: " Application " ${APPS-NAME} " deployment into " ${QA-PRJ-NAME}" is needed")
            input 'Proceeed ?'
            openshiftTag(namespace: ${DEV-PRJ-NAME}, sourceStream: ${APPS-NAME},  sourceTag: 'latest' , destinationStream: ${APPS-NAME} , destinationTag: 'promoteToQA')
            openshiftDeploy(namespace: ${QA-PRJ-NAME} , deploymentConfig: ${APPS-NAME})
            openshiftScale(namespace: ${QA-PRJ-NAME} , deploymentConfig: ${APPS-NAME} , replicaCount: ${QA-POD-COUNT})
          stage 'finishinDeployment'
            slackSend (color: '#008000', message: " Application " ${APPS-NAME} " deployed into " ${QA-PRJ-NAME})              
        }
  output:
  resources:
  postCommit:
